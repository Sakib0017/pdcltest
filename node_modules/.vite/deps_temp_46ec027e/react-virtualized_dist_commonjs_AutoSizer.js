import {
  require_assertThisInitialized,
  require_classCallCheck,
  require_createClass,
  require_defineProperty,
  require_getPrototypeOf,
  require_inherits,
  require_interopRequireDefault,
  require_interopRequireWildcard,
  require_possibleConstructorReturn
} from "./chunk-5W3432MO.js";
import {
  require_prop_types
} from "./chunk-63ILDAJJ.js";
import {
  require_react
} from "./chunk-EFTEWGEA.js";
import {
  __commonJS
} from "./chunk-V4OQ3NZ2.js";

// node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js
var require_detectElementResize = __commonJS({
  "node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = createDetectElementResize;
    function createDetectElementResize(nonce, hostWindow) {
      var _window;
      if (typeof hostWindow !== "undefined") {
        _window = hostWindow;
      } else if (typeof window !== "undefined") {
        _window = window;
      } else if (typeof self !== "undefined") {
        _window = self;
      } else {
        _window = global;
      }
      var attachEvent = typeof _window.document !== "undefined" && _window.document.attachEvent;
      if (!attachEvent) {
        var requestFrame = function() {
          var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function(fn) {
            return _window.setTimeout(fn, 20);
          };
          return function(fn) {
            return raf(fn);
          };
        }();
        var cancelFrame = function() {
          var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;
          return function(id) {
            return cancel(id);
          };
        }();
        var resetTriggers = function resetTriggers2(element) {
          var triggers = element.__resizeTriggers__, expand = triggers.firstElementChild, contract = triggers.lastElementChild, expandChild = expand.firstElementChild;
          contract.scrollLeft = contract.scrollWidth;
          contract.scrollTop = contract.scrollHeight;
          expandChild.style.width = expand.offsetWidth + 1 + "px";
          expandChild.style.height = expand.offsetHeight + 1 + "px";
          expand.scrollLeft = expand.scrollWidth;
          expand.scrollTop = expand.scrollHeight;
        };
        var checkTriggers = function checkTriggers2(element) {
          return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;
        };
        var scrollListener = function scrollListener2(e) {
          if (e.target.className && typeof e.target.className.indexOf === "function" && e.target.className.indexOf("contract-trigger") < 0 && e.target.className.indexOf("expand-trigger") < 0) {
            return;
          }
          var element = this;
          resetTriggers(this);
          if (this.__resizeRAF__) {
            cancelFrame(this.__resizeRAF__);
          }
          this.__resizeRAF__ = requestFrame(function() {
            if (checkTriggers(element)) {
              element.__resizeLast__.width = element.offsetWidth;
              element.__resizeLast__.height = element.offsetHeight;
              element.__resizeListeners__.forEach(function(fn) {
                fn.call(element, e);
              });
            }
          });
        };
        var animation = false, keyframeprefix = "", animationstartevent = "animationstart", domPrefixes = "Webkit Moz O ms".split(" "), startEvents = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "), pfx = "";
        {
          var elm = _window.document.createElement("fakeelement");
          if (elm.style.animationName !== void 0) {
            animation = true;
          }
          if (animation === false) {
            for (var i = 0; i < domPrefixes.length; i++) {
              if (elm.style[domPrefixes[i] + "AnimationName"] !== void 0) {
                pfx = domPrefixes[i];
                keyframeprefix = "-" + pfx.toLowerCase() + "-";
                animationstartevent = startEvents[i];
                animation = true;
                break;
              }
            }
          }
        }
        var animationName = "resizeanim";
        var animationKeyframes = "@" + keyframeprefix + "keyframes " + animationName + " { from { opacity: 0; } to { opacity: 0; } } ";
        var animationStyle = keyframeprefix + "animation: 1ms " + animationName + "; ";
      }
      var createStyles = function createStyles2(doc) {
        if (!doc.getElementById("detectElementResize")) {
          var css = (animationKeyframes ? animationKeyframes : "") + ".resize-triggers { " + (animationStyle ? animationStyle : "") + 'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }', head = doc.head || doc.getElementsByTagName("head")[0], style = doc.createElement("style");
          style.id = "detectElementResize";
          style.type = "text/css";
          if (nonce != null) {
            style.setAttribute("nonce", nonce);
          }
          if (style.styleSheet) {
            style.styleSheet.cssText = css;
          } else {
            style.appendChild(doc.createTextNode(css));
          }
          head.appendChild(style);
        }
      };
      var addResizeListener = function addResizeListener2(element, fn) {
        if (attachEvent) {
          element.attachEvent("onresize", fn);
        } else {
          if (!element.__resizeTriggers__) {
            var doc = element.ownerDocument;
            var elementStyle = _window.getComputedStyle(element);
            if (elementStyle && elementStyle.position == "static") {
              element.style.position = "relative";
            }
            createStyles(doc);
            element.__resizeLast__ = {};
            element.__resizeListeners__ = [];
            (element.__resizeTriggers__ = doc.createElement("div")).className = "resize-triggers";
            var resizeTriggersHtml = '<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>';
            if (window.trustedTypes) {
              var staticPolicy = trustedTypes.createPolicy("react-virtualized-auto-sizer", {
                createHTML: function createHTML() {
                  return resizeTriggersHtml;
                }
              });
              element.__resizeTriggers__.innerHTML = staticPolicy.createHTML("");
            } else {
              element.__resizeTriggers__.innerHTML = resizeTriggersHtml;
            }
            element.appendChild(element.__resizeTriggers__);
            resetTriggers(element);
            element.addEventListener("scroll", scrollListener, true);
            if (animationstartevent) {
              element.__resizeTriggers__.__animationListener__ = function animationListener(e) {
                if (e.animationName == animationName) {
                  resetTriggers(element);
                }
              };
              element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);
            }
          }
          element.__resizeListeners__.push(fn);
        }
      };
      var removeResizeListener = function removeResizeListener2(element, fn) {
        if (attachEvent) {
          element.detachEvent("onresize", fn);
        } else {
          element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);
          if (!element.__resizeListeners__.length) {
            element.removeEventListener("scroll", scrollListener, true);
            if (element.__resizeTriggers__.__animationListener__) {
              element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);
              element.__resizeTriggers__.__animationListener__ = null;
            }
            try {
              element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);
            } catch (e) {
            }
          }
        }
      };
      return {
        addResizeListener,
        removeResizeListener
      };
    }
  }
});

// node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js
var require_AutoSizer = __commonJS({
  "node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf3 = _interopRequireDefault(require_getPrototypeOf());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var React = _interopRequireWildcard(require_react());
    var _detectElementResize = _interopRequireDefault(require_detectElementResize());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _class;
    var _temp;
    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        });
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        if (i % 2) {
          ownKeys(source, true).forEach(function(key) {
            (0, _defineProperty2["default"])(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(source).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    var AutoSizer = (_temp = _class = function(_React$Component) {
      (0, _inherits2["default"])(AutoSizer2, _React$Component);
      function AutoSizer2() {
        var _getPrototypeOf2;
        var _this;
        (0, _classCallCheck2["default"])(this, AutoSizer2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(AutoSizer2)).call.apply(_getPrototypeOf2, [this].concat(args)));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
          height: _this.props.defaultHeight || 0,
          width: _this.props.defaultWidth || 0
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_parentNode", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_autoSizer", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_window", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_detectElementResize", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_onResize", function() {
          var _this$props = _this.props, disableHeight = _this$props.disableHeight, disableWidth = _this$props.disableWidth, onResize = _this$props.onResize;
          if (_this._parentNode) {
            var height = _this._parentNode.offsetHeight || 0;
            var width = _this._parentNode.offsetWidth || 0;
            var win = _this._window || window;
            var style = win.getComputedStyle(_this._parentNode) || {};
            var paddingLeft = parseInt(style.paddingLeft, 10) || 0;
            var paddingRight = parseInt(style.paddingRight, 10) || 0;
            var paddingTop = parseInt(style.paddingTop, 10) || 0;
            var paddingBottom = parseInt(style.paddingBottom, 10) || 0;
            var newHeight = height - paddingTop - paddingBottom;
            var newWidth = width - paddingLeft - paddingRight;
            if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {
              _this.setState({
                height: height - paddingTop - paddingBottom,
                width: width - paddingLeft - paddingRight
              });
              onResize({
                height,
                width
              });
            }
          }
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "_setRef", function(autoSizer) {
          _this._autoSizer = autoSizer;
        });
        return _this;
      }
      (0, _createClass2["default"])(AutoSizer2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var nonce = this.props.nonce;
          if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {
            this._parentNode = this._autoSizer.parentNode;
            this._window = this._autoSizer.parentNode.ownerDocument.defaultView;
            this._detectElementResize = (0, _detectElementResize["default"])(nonce, this._window);
            this._detectElementResize.addResizeListener(this._parentNode, this._onResize);
            this._onResize();
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this._detectElementResize && this._parentNode) {
            this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props2 = this.props, children = _this$props2.children, className = _this$props2.className, disableHeight = _this$props2.disableHeight, disableWidth = _this$props2.disableWidth, style = _this$props2.style;
          var _this$state = this.state, height = _this$state.height, width = _this$state.width;
          var outerStyle = {
            overflow: "visible"
          };
          var childParams = {};
          if (!disableHeight) {
            outerStyle.height = 0;
            childParams.height = height;
          }
          if (!disableWidth) {
            outerStyle.width = 0;
            childParams.width = width;
          }
          return React.createElement("div", {
            className,
            ref: this._setRef,
            style: _objectSpread({}, outerStyle, {}, style)
          }, children(childParams));
        }
      }]);
      return AutoSizer2;
    }(React.Component), (0, _defineProperty2["default"])(_class, "propTypes", false ? null : {
      /** Function responsible for rendering children.*/
      "children": _propTypes["default"].func.isRequired,
      /** Optional custom CSS class name to attach to root AutoSizer element.  */
      "className": _propTypes["default"].string,
      /** Default height to use for initial render; useful for SSR */
      "defaultHeight": _propTypes["default"].number,
      /** Default width to use for initial render; useful for SSR */
      "defaultWidth": _propTypes["default"].number,
      /** Disable dynamic :height property */
      "disableHeight": _propTypes["default"].bool.isRequired,
      /** Disable dynamic :width property */
      "disableWidth": _propTypes["default"].bool.isRequired,
      /** Nonce of the inlined stylesheet for Content Security Policy */
      "nonce": _propTypes["default"].string,
      /** Callback to be invoked on-resize */
      "onResize": _propTypes["default"].func.isRequired,
      /** Optional inline style */
      "style": _propTypes["default"].object
    }), _temp);
    exports["default"] = AutoSizer;
    (0, _defineProperty2["default"])(AutoSizer, "defaultProps", {
      onResize: function onResize() {
      },
      disableHeight: false,
      disableWidth: false,
      style: {}
    });
  }
});

// node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js
var require_AutoSizer2 = __commonJS({
  "node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js"(exports) {
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get() {
        return _AutoSizer["default"];
      }
    });
    Object.defineProperty(exports, "AutoSizer", {
      enumerable: true,
      get: function get() {
        return _AutoSizer["default"];
      }
    });
    var _AutoSizer = _interopRequireDefault(require_AutoSizer());
  }
});
export default require_AutoSizer2();
//# sourceMappingURL=react-virtualized_dist_commonjs_AutoSizer.js.map
